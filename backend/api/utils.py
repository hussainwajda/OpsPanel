import os
from django.conf import settings
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import base64
import hashlib

def decrypt_aes_data(encrypted_data, secret_key=None):
    """
    Decrypt AES encrypted data
    Based on Node.js backend decryptAESData function
    """
    if not encrypted_data or not secret_key:
        return None
    
    try:
        # Decode base64
        encrypted_bytes = base64.b64decode(encrypted_data)
        
        # Extract IV and ciphertext
        iv = encrypted_bytes[:16]
        ciphertext = encrypted_bytes[16:]
        
        # Create cipher
        cipher = AES.new(secret_key.encode('utf-8')[:32].ljust(32, b'0'), AES.MODE_CBC, iv)
        
        # Decrypt
        decrypted_bytes = cipher.decrypt(ciphertext)
        
        # Remove padding
        decrypted_data = unpad(decrypted_bytes, AES.block_size)
        
        return decrypted_data.decode('utf-8')
    except Exception as e:
        print(f'Decryption error: {e}')
        return None

def decrypt_ssh_password(encrypted_password):
    """
    Decrypt SSH password with caching
    Based on Node.js backend decryptSSHPassword function
    """
    if not encrypted_password:
        return None
    
    try:
        # Use SSH_PASSWORD_KEY from settings
        secret_key = getattr(settings, 'SSH_PASSWORD_KEY', 'default-ssh-key')
        return decrypt_aes_data(encrypted_password, secret_key)
    except Exception as e:
        print(f'SSH password decryption error: {e}')
        return None

def generate_device_token():
    """
    Generate a simple device token (for testing purposes)
    In production, this should be generated by the frontend
    """
    import secrets
    return secrets.token_urlsafe(32)

def hash_password(password):
    """
    Hash password using Django's built-in hashing
    """
    from django.contrib.auth.hashers import make_password
    return make_password(password)

def verify_password(password, hashed_password):
    """
    Verify password using Django's built-in hashing
    """
    from django.contrib.auth.hashers import check_password
    return check_password(password, hashed_password)

